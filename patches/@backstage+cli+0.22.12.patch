diff --git a/node_modules/@backstage/cli/dist/cjs/lint-d9ce2976.cjs.js b/node_modules/@backstage/cli/dist/cjs/lint-d9ce2976.cjs.js
index e5b09ed..94fb305 100644
--- a/node_modules/@backstage/cli/dist/cjs/lint-d9ce2976.cjs.js
+++ b/node_modules/@backstage/cli/dist/cjs/lint-d9ce2976.cjs.js
@@ -74,7 +74,54 @@ async function command(opts) {
     }
   });
   let failed = false;
+
+  let errors_summary = {
+    total_count: 0,
+    per_package: [],
+  };
+  let violations_combined = [];
+
   for (const { relativeDir, resultText } of resultsList) {
+    const package_dir = path.join(errors_dir, relativeDir);
+    fs.mkdirSync(package_dir, { recursive: true });
+
+    const stripAnsi = new RegExp(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g);
+    const resultTextFormatted = resultText.replace(stripAnsi, "").split("\n");
+
+    fs.writeFileSync(`${package_dir}/results.txt`, `${relativeDir}\n${resultTextFormatted.join('\n')}\n`);
+
+    const violations_count = parseInt(
+      resultTextFormatted
+        .find(line => line.match(/✘ [0-9]+ problem.*/))
+        .replace(/\s*✘\s*/, "")
+        .replace(/ problem.*/, "")
+    , 10);
+
+    const violations_index = resultTextFormatted.indexOf("Errors:") >= 0
+      ? resultTextFormatted.indexOf("Errors:")
+      : resultTextFormatted.indexOf("Warnings:");
+
+    let package_violations = [];
+
+    resultTextFormatted.slice(violations_index).forEach(line => {
+      if (line.match(/http/)) {
+        const error_details = {
+          count: parseInt(line.match(/\d+/)[0], 10),
+          rule: line.match(/http.*/)[0]
+        }
+        package_violations.push(error_details);
+        violations_combined.push(error_details);
+      }
+    });
+
+    errors_summary.per_package.push({
+      package: relativeDir,
+      violations_count,
+      package_violations: package_violations.sort((a, b) => a.rule.localeCompare(b.rule)),
+    });
+
+    errors_summary.total_count = errors_summary.total_count + violations_count;
+
     if (resultText) {
       console.log();
       console.log(chalk__default["default"].red(`Lint failed in ${relativeDir}:`));
@@ -83,7 +130,22 @@ async function command(opts) {
     }
   }
   if (failed) {
-    process.exit(1);
+    const combined_violations_sorted = violations_combined
+    .reduce((acc, item) => {
+      const already_exists = acc.findIndex(acc_item => acc_item.rule === item.rule);
+      if (already_exists > -1) {
+        acc[already_exists].count = acc[already_exists].count + item.count
+        return acc;
+      } else {
+        return [...acc, item];
+      }
+    }, []);
+
+    fs.writeFileSync(errors_dir + "/summary.json", JSON.stringify({
+      count: errors_summary.total_count,
+      errors_combined: combined_violations_sorted.sort((a, b) => a.rule.localeCompare(b.rule)),
+      per_package: errors_summary.per_package.sort((a, b) => a.package.localeCompare(b.rule)),
+    }, null, 2));
   }
 }
 
